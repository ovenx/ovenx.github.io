<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on owen's blog</title><link>https://blog.ovenx.cn/post/</link><description>Recent content in Posts on owen's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>owen</copyright><lastBuildDate>Wed, 29 Jul 2020 08:00:00 +0800</lastBuildDate><atom:link href="https://blog.ovenx.cn/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 常用操作笔记</title><link>https://blog.ovenx.cn/post/git-notes/</link><pubDate>Wed, 29 Jul 2020 08:00:00 +0800</pubDate><guid>https://blog.ovenx.cn/post/git-notes/</guid><description>提交 Pull request 的最佳实践 1. 首先 fork 仓库 添加一个自己的仓库副本 2. 添加 upstream source 1 git remote add upstrem URL 3. 创建一个 dev 分支 1 2 git checkout -b dev git commit -m &amp;#34;add new feature&amp;#34; 4. 开发及测试完成后 Rebase 1 2 git</description></item><item><title>Windows Terminal 使用 git log / git diff 中文乱码问题</title><link>https://blog.ovenx.cn/post/windows-terminal-git-encode/</link><pubDate>Thu, 09 Jul 2020 16:25:53 +0800</pubDate><guid>https://blog.ovenx.cn/post/windows-terminal-git-encode/</guid><description>Git 编码设置 1 2 git config --global i18n.commit.encoding utf-8 git config --global i18n.logoutputencoding utf-8 添加环境变量 设置环境变量 LESSCHARSET 为 utf-8</description></item><item><title>WIN10 获取超级管理员权限</title><link>https://blog.ovenx.cn/post/win10-admin-permission/</link><pubDate>Wed, 01 Jul 2020 09:23:34 +0800</pubDate><guid>https://blog.ovenx.cn/post/win10-admin-permission/</guid><description>开启 Adminstrator 账户 选择 计算机 -&amp;gt; 管理 -&amp;gt;本地用户和组 -&amp;gt; 用户 找到 Administrator, 去除 此账户已禁用 勾选 获取超级管理员权限 打开策略编辑器 1 2 win + r gpedit.msc 选择 计算机配置 -&amp;gt;</description></item><item><title>MySQL 设置默认编码为 utf8mb4</title><link>https://blog.ovenx.cn/post/mysql-utf8mb4/</link><pubDate>Tue, 30 Jun 2020 10:37:16 +0800</pubDate><guid>https://blog.ovenx.cn/post/mysql-utf8mb4/</guid><description>mariadb 修改配置文件 1 2 3 4 5 6 vim /etc/my.conf.d/server.conf [mysqld] character_set_server=utf8mb4 collation-server=utf8mb4_general_ci init_connect=&amp;#39;SET NAMES utf8mb4&amp;#39; skip-character-set-client-handshake=true 重启 mariadb 1 systemctl restart mariadb 查看编码 1 SHOW VARIABLES WHERE Variable_name LIKE &amp;#39;character\_set\_%&amp;#39; OR Variable_name LIKE &amp;#39;collation%&amp;#39;; mysql 修改配置文件 1 2 3 4 5 6 7 8 9 10 11 vim /etc/my.cnf [client] default-character-set = utf8mb4 [mysql] default-character-set</description></item><item><title>WSL2 下配置 PHP 环境</title><link>https://blog.ovenx.cn/post/wsl2-php/</link><pubDate>Tue, 23 Jun 2020 18:24:00 +0800</pubDate><guid>https://blog.ovenx.cn/post/wsl2-php/</guid><description>系统 wsl2 debian 10 windows 10 专业版 2004 安装 wsl2 需要升级到 win10 19041以上 启用 Windows Subsystem for Linux 1 dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart 启用 Virtual Machine Platform 1 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 将 WSL 2 设置为默认版本 1 wsl --set-default-version 2 将发行设</description></item><item><title>Linux 下搭建 git 服务器</title><link>https://blog.ovenx.cn/post/deploy-git/</link><pubDate>Mon, 16 Mar 2020 09:00:00 +0800</pubDate><guid>https://blog.ovenx.cn/post/deploy-git/</guid><description>安装 git 1 yum install git git-core 创建 git 用户 为了服务器的安全，一般不会直接使用 root 用户来运行 git 服务。我们可以新建一个 git 用户专门用来执行 git 服务。 1 2 3 4 5 6 7 8 9</description></item><item><title>PHP 配合 Rsync 同步推送代码到服务器</title><link>https://blog.ovenx.cn/post/rsync-php/</link><pubDate>Thu, 12 Mar 2020 10:00:41 +0800</pubDate><guid>https://blog.ovenx.cn/post/rsync-php/</guid><description>前言 之前搭建公司开发环境有一个需求，需要将本地测试服务器中的代码同步推送到线上的服务器。后面开始研究 rsync，中途踩了很多坑，故在此记录下</description></item><item><title>常用工具国内源配置</title><link>https://blog.ovenx.cn/post/china-source/</link><pubDate>Wed, 11 Mar 2020 09:54:00 +0800</pubDate><guid>https://blog.ovenx.cn/post/china-source/</guid><description>由于国内的网络原因，很多工具（如 npm, pip）等在国内连接很慢，这里整理了下常用的工具国内源 Linux CentOS 相关地址：http://mirrors.aliy</description></item><item><title>Linux 下安装 SVN</title><link>https://blog.ovenx.cn/post/linux-svn/</link><pubDate>Mon, 09 Mar 2020 08:00:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/linux-svn/</guid><description>本文的环境： centos 7.6 svn 1.7.14 安装 1 yum install subversion 创建仓库 新建一个名为 test 的代码仓库 1 2 mkdir /var/svn/test svnadmin create /var/svn/test 此时 test 目录的结构如下 1 2 3 4 5 6 7 8 drwxr-xr-x. 6 root root 86 2月 29 13:13 . drwxrwxrwx. 8 root</description></item><item><title>Linux 升级 Python3</title><link>https://blog.ovenx.cn/post/upgrade-python3/</link><pubDate>Tue, 18 Feb 2020 10:07:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/upgrade-python3/</guid><description>本文的系统版本 centos7 x64，默认的 python 版本为 2.7，升级之后的版本为 3.8.1 安装依赖包 1 2 yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make yum install libffi-devel # 缺少这个 make 时会报 ModuleNo</description></item><item><title>CentOS 下安装字体</title><link>https://blog.ovenx.cn/post/centos-install-fonts/</link><pubDate>Mon, 17 Feb 2020 23:05:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/centos-install-fonts/</guid><description>本文的系统版本 centos7 x64 查看字体 1 fc-list 安装字体 1 cp xxx.ttf /usr/share/fonts/ # copy fonts to /usr/share/fonts 建立字体缓存 1 2 3 4 5 cd /usr/share/fonts/ chmod 755 *.ttf # 修改字体权限 mkfontscale # 依赖 mkfonts mkfontdir fc-cache -fv # 依赖 fontconfig</description></item><item><title>摩尔斯码记忆规则</title><link>https://blog.ovenx.cn/post/memorize-morse-code/</link><pubDate>Sat, 15 Feb 2020 23:14:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/memorize-morse-code/</guid><description>字母表 A B C D E F G apple body cat dog egg fish girl H I J K L M N hand ice jeep king lamb monkey nose O P Q R S T orange pen queen rabbit snake tiger U V W X Y Z umberlla visa watch x-ray yark zoo 联想 A : 横着的感叹号，左边顶上</description></item><item><title>重新夺回你自己，做个强烈自我意识的人</title><link>https://blog.ovenx.cn/post/control-yourself/</link><pubDate>Fri, 14 Feb 2020 23:17:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/control-yourself/</guid><description>在大多数情况下，实际行动都是发生在其主观意义处于模糊的半意识、或者实际上处于无意识的状态中，行动者更有可能是在模模糊糊的意义上“知道”它，但</description></item><item><title>搭建 Webpack4 和 Vue2 项目</title><link>https://blog.ovenx.cn/post/webpack4-vue2/</link><pubDate>Tue, 11 Feb 2020 16:54:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/webpack4-vue2/</guid><description>本文的环境： vue 2.6.11 webpack 4.41.5 babel 7.8.4 node 12.13.1 安装 webpack 1 npm webpack webpack-cli -g 初始化项目 创建目录，初始化 1 2 3 mkdir webpack4-vue2 cd webpack4-vu2 npm init 安装 webpack-dev-server 1 npm install webpack webpack-dev-server --save-dev 新建 webpack.config.js 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description></item><item><title>Flask-blog 部署</title><link>https://blog.ovenx.cn/post/flask-blog-deploy/</link><pubDate>Sun, 09 Feb 2020 20:27:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/flask-blog-deploy/</guid><description>本文的 python 环境为 python3.8.1 预览地址：首页 、后台管理 安装 flask-blog clone 代码到本地 1 2 cd /www git clone https://github.com/ovenx/flask-blog.git 安装虚拟环境 1 2 python -m venv venv . venv/bin/activate 安装依赖 1 pip install -r requirements.txt 创建数据库,导入数据表</description></item><item><title>Hexo+Github 搭建个人博客</title><link>https://blog.ovenx.cn/post/hexo-github/</link><pubDate>Sat, 12 Oct 2019 08:00:00 +0800</pubDate><guid>https://blog.ovenx.cn/post/hexo-github/</guid><description>前段时间把博客搬家到了 github 上，这里记录下过程。 安装 hexo 1 2 3 4 npm install hexo hexo init blog cd blog npm install 常用的命令 1 2 3 4 5 hexo new [layout] &amp;lt;title&amp;gt; # 新建文章 hexo g # 生成静态文件 hexo s #</description></item><item><title>Let's Encrypt 小记</title><link>https://blog.ovenx.cn/post/lets-encrypt/</link><pubDate>Thu, 12 Oct 2017 08:00:00 +0000</pubDate><guid>https://blog.ovenx.cn/post/lets-encrypt/</guid><description>本文的环境是 nginx1.3 + centos7，nginx 设置的根目录 /www 生成 Diffie-Hellman Parameters 生成这个文件的目的是加强 ssl 的安全性。 当然这一步不是必需的，但是如果没有这一步</description></item></channel></rss>