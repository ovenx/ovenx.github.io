<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>rsync on owen&#39;s blog</title>
    <link>https://blog.ovenx.cn/tags/rsync/</link>
    <description>Recent content in rsync on owen&#39;s blog</description>
    <image>
      <url>https://blog.ovenx.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.ovenx.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 12 Mar 2020 10:00:41 +0800</lastBuildDate><atom:link href="https://blog.ovenx.cn/tags/rsync/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP 配合 Rsync 同步推送代码到服务器</title>
      <link>https://blog.ovenx.cn/post/rsync-php/</link>
      <pubDate>Thu, 12 Mar 2020 10:00:41 +0800</pubDate>
      
      <guid>https://blog.ovenx.cn/post/rsync-php/</guid>
      <description>前言 之前搭建公司开发环境有一个需求，需要将本地测试服务器中的代码同步推送到线上的服务器。后面开始研究 rsync，中途踩了很多坑，故在此记录下一些主要的操作和注意事项
Rsync 设置 本地同步 同步单个文件
1  rsync -avz /etc/passwd /tmp/ # 同步 passwd 文件到 tmp 目录下   同步目录下所有文件（包含目录本身）
1 2 3  mkdir /root/test1 echo &amp;#34;test1&amp;#34; &amp;gt; /root/test1/file1 rsync -avz /root/test1 /tmp/ # 同步 test1 目录 文件到 tmp 目录下   同步目录下所有文件（不包含目录本身）
1 2 3  mkdir /root/test2 echo &amp;#34;test&amp;#34; &amp;gt; /root/test2/file2 rsync -avz /root/test2/ /tmp/ # 同步 test2 目录 文件到 tmp 目录下    特别注意后面以 / 结尾不包含目录，没有 / 则包含目录</description>
    </item>
    
  </channel>
</rss>
