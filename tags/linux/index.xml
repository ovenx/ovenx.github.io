<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>linux on owen&#39;s blog</title>
    <link>https://blog.ovenx.cn/tags/linux/</link>
    <description>Recent content in linux on owen&#39;s blog</description>
    <image>
      <url>https://blog.ovenx.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.ovenx.cn/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 12 Mar 2020 10:00:41 +0800</lastBuildDate><atom:link href="https://blog.ovenx.cn/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PHP 配合 Rsync 同步推送代码到服务器</title>
      <link>https://blog.ovenx.cn/post/rsync-php/</link>
      <pubDate>Thu, 12 Mar 2020 10:00:41 +0800</pubDate>
      
      <guid>https://blog.ovenx.cn/post/rsync-php/</guid>
      <description>前言 之前搭建公司开发环境有一个需求，需要将本地测试服务器中的代码同步推送到线上的服务器。后面开始研究 rsync，中途踩了很多坑，故在此记录下一些主要的操作和注意事项
Rsync 设置 本地同步 同步单个文件
rsync -avz /etc/passwd /tmp/ # 同步 passwd 文件到 tmp 目录下 同步目录下所有文件（包含目录本身）
mkdir /root/test1 echo &amp;#34;test1&amp;#34; &amp;gt; /root/test1/file1 rsync -avz /root/test1 /tmp/ # 同步 test1 目录 文件到 tmp 目录下 同步目录下所有文件（不包含目录本身）
mkdir /root/test2 echo &amp;#34;test&amp;#34; &amp;gt; /root/test2/file2 rsync -avz /root/test2/ /tmp/ # 同步 test2 目录 文件到 tmp 目录下  特别注意后面以 / 结尾不包含目录，没有 / 则包含目录
 通过 SSH 同步到远程服务器 # 本地服务器 echo &amp;#34;test&amp;#34; &amp;gt; /root/rsync_file rsync -avz /root/rsync_file root@remote_ip:/root/rsync_file # 推送到远程服务器 # 也可以指定 key 文件实现免密处理 rsync -avz -e &amp;#34;ssh /rsync/ssh-key&amp;#34; /root/rsync_file root@remote_ip:/root/rsync_file # 远程服务器 cat /root/rsync_file test  使用 ssh 可以实现推送到远程服务器的工作，但是存在很多问题。最主要的一点是 PHP 脚本执行 ssh 时会存在权限的问题。</description>
    </item>
    
    <item>
      <title>常用工具国内源配置</title>
      <link>https://blog.ovenx.cn/post/china-source/</link>
      <pubDate>Wed, 11 Mar 2020 09:54:00 +0800</pubDate>
      
      <guid>https://blog.ovenx.cn/post/china-source/</guid>
      <description>由于国内的网络原因，很多工具（如 npm, pip）等在国内连接很慢，这里整理了下常用的工具国内源
Linux CentOS 相关地址：http://mirrors.aliyun.com/repo/
首先备份
sudo mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak 下载源
# http://mirrors.aliyun.com/repo/Centos-6.repo # http://mirrors.aliyun.com/repo/Centos-7.repo # http://mirrors.aliyun.com/repo/Centos-8.repo wget http://mirrors.aliyun.com/repo/Centos-8.repo mv Centos-8.repo /etc/yum.repos.d/CentOS-Base.repo 生成缓存
yum clean all # 清除系统所有的 yum 缓存 yum makecache # 生成 yum 缓存 yum update # 更新 yum Debian 配置国内源
cp /etc/apt/sources.list /etc/apt/sources.list.bak vi source.list # 复制下面内容到 sources.list deb http://mirrors.aliyun.com/debian/ buster main non-free contrib deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib deb http://mirrors.aliyun.com/debian-security buster/updates main deb-src http://mirrors.aliyun.com/debian-security buster/updates main deb http://mirrors.</description>
    </item>
    
    <item>
      <title>Linux 下安装 SVN</title>
      <link>https://blog.ovenx.cn/post/linux-svn/</link>
      <pubDate>Mon, 09 Mar 2020 08:00:00 +0000</pubDate>
      
      <guid>https://blog.ovenx.cn/post/linux-svn/</guid>
      <description>本文的环境：
 centos 7.6 svn 1.7.14  安装 yum install subversion 创建仓库 新建一个名为 test 的代码仓库
mkdir /var/svn/test svnadmin create /var/svn/test 此时 test 目录的结构如下
drwxr-xr-x. 6 root root 86 2月 29 13:13 . drwxrwxrwx. 8 root root 102 3月 9 11:09 .. drwxr-xr-x. 2 root root 54 3月 9 09:24 conf drwxr-sr-x. 6 root root 253 2月 29 13:45 db -r--r--r--. 1 root root 2 2月 29 13:13 format drwxr-xr-x. 2 root root 231 2月 29 14:01 hooks drwxr-xr-x.</description>
    </item>
    
  </channel>
</rss>
